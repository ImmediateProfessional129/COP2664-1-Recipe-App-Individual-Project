import SwiftUI

struct RecipeView: View {
    private let recipe: Recipe // This is a property of the RecipeView struct that holds a Recipe object.
    
    init (_ recipe: Recipe) {
        self.recipe = recipe
    } // This is a custom initializer for the RecipeView struct. It takes a Recipe object as a parameter and assigns it to the recipe property of the struct.
    var body: some View {
        ScrollView {
            AsyncImage(url: URL(string: recipe.image)) { image in
                image
                    .resizable()
                    .aspectRatio(contentMode: .fill) // This line ensures that the image is resized to fit the frame while maintaining its aspect ratio.
            } placeholder: {
                Image(systemName: "photo")
                    .resizable()
                    .scaledToFit()
                    .frame(width: 100, height: 100, alignment: .center) // This line sets the size of the placeholder image.
                    .foregroundColor(.white.opacity(0.7))
                    .frame(maxWidth: .infinity, maxHeight: .infinity)
            } // This line sets the placeholder image to be displayed while the image is loading.
            .frame(height: 300)
            .background(LinearGradient(gradient: Gradient(colors: [Color(.gray).opacity(0.3), Color(.gray)]), startPoint: .top, endPoint: .bottom)) // This line sets the background gradient of the image.
            
            VStack(spacing: 30) {
                Text(recipe.name)
                    .font(.largeTitle)
                    .bold()
                    .multilineTextAlignment(.center) // This line ensures that the text is centered horizontally.
                
                VStack(alignment: .leading, spacing: 30) {
                    if !recipe.description.isEmpty {
                        Text(recipe.description)
                    } // This line displays the description of the recipe if it is not empty.
                    
                    if !recipe.ingredients.isEmpty {
                        VStack(alignment: .leading, spacing: 20) {
                            Text("Ingredients")
                                .font(.headline)
                            
                            Text(recipe.ingredients)
                        }
                    } // This line displays the ingredients of the recipe if it is not empty.
                    
                    if !recipe.directions.isEmpty {
                        VStack(alignment: .leading, spacing: 20) {
                            Text("Directions")
                                .font(.headline)
                            
                            Text(recipe.directions)
                        }
                    }
                }
                .frame(maxWidth: .infinity, alignment: .leading)
            }
            .padding(.horizontal)
        }
        .ignoresSafeArea(.container, edges: .top)
    }
} // This line ensures that the top edge of the view is ignored for safe area insets.

struct RecipeView_Previews: PreviewProvider {
    static var previews: some View {
        RecipeView(Recipe.all[0])
    }
} // This line sets up a preview for the RecipeView struct. It uses the first recipe in the Recipe.all array as the data for the preview.
